{"ast":null,"code":"import axios from 'axios';\nconst env1 = {\n  development: {\n    api: 'https://47ruk9bopl.execute-api.eu-central-1.amazonaws.com/dev/'\n  },\n  production: {\n    api: 'https://47ruk9bopl.execute-api.eu-central-1.amazonaws.com/dev/'\n  }\n};\nexport const env = env1[process.env.NODE_ENV];\nexport const query = async (json, token) => {\n  const result = await axios.post(env.api, JSON.stringify(json), {\n    headers: {\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    }\n  });\n  return new Promise(resolve => {\n    resolve(result);\n  });\n};","map":{"version":3,"sources":["/Users/arpecop/Desktop/auth/src/utils/api.js"],"names":["axios","env1","development","api","production","env","process","NODE_ENV","query","json","token","result","post","JSON","stringify","headers","Authorization","Promise","resolve"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,IAAI,GAAG;AACXC,EAAAA,WAAW,EAAE;AACXC,IAAAA,GAAG,EAAE;AADM,GADF;AAIXC,EAAAA,UAAU,EAAE;AACVD,IAAAA,GAAG,EAAE;AADK;AAJD,CAAb;AAQA,OAAO,MAAME,GAAG,GAAGJ,IAAI,CAACK,OAAO,CAACD,GAAR,CAAYE,QAAb,CAAhB;AACP,OAAO,MAAMC,KAAK,GAAG,OAAOC,IAAP,EAAaC,KAAb,KAAuB;AAC1C,QAAMC,MAAM,GAAG,MAAMX,KAAK,CAACY,IAAN,CACnBP,GAAG,CAACF,GADe,EAEnBU,IAAI,CAACC,SAAL,CAAeL,IAAf,CAFmB,EAGnB;AACEM,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,UAASN,KAAM,EADxB;AAEP,sBAAgB;AAFT;AADX,GAHmB,CAArB;AAUA,SAAO,IAAIO,OAAJ,CAAaC,OAAD,IAAa;AAC9BA,IAAAA,OAAO,CAACP,MAAD,CAAP;AACD,GAFM,CAAP;AAGD,CAdM","sourcesContent":["import axios from 'axios';\n\nconst env1 = {\n  development: {\n    api: 'https://47ruk9bopl.execute-api.eu-central-1.amazonaws.com/dev/',\n  },\n  production: {\n    api: 'https://47ruk9bopl.execute-api.eu-central-1.amazonaws.com/dev/',\n  },\n};\nexport const env = env1[process.env.NODE_ENV];\nexport const query = async (json, token) => {\n  const result = await axios.post(\n    env.api,\n    JSON.stringify(json),\n    {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json',\n      },\n    },\n  );\n  return new Promise((resolve) => {\n    resolve(result);\n  });\n};\n"]},"metadata":{},"sourceType":"module"}